<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huanletao.huanletao.mapper.WebUserMapper" >
  <resultMap id="BaseResultMap" type="com.huanletao.huanletao.entity.WebUser" >
    <id column="userid" property="userid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="loginname" property="loginname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="college" property="college" jdbcType="VARCHAR" />
    <result column="graduatedate" property="graduatedate" jdbcType="DATE" />
    <result column="Headimage" property="headimage" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="usertype" property="usertype" jdbcType="INTEGER" />
  </resultMap>

  <!--管理员登录-->
  <select id="findAdmin" resultMap="BaseResultMap" parameterType="java.lang.String">
    -- 管理员登录的sql
    SELECT * FROM web_user
    WHERE usertype=2 AND loginname=#{username}
  </select>

  <select id="findByGoodId" parameterType="int" resultMap="BaseResultMap">
    SELECT
        *
    FROM
        web_user
    WHERE
        EXISTS (
            SELECT
                userid
            FROM
                web_good
            WHERE
                goodid = #{goodid} and web_user.userid = web_good.userid
        )
  </select>

  <!--查询买家信息。-->
  <select id="findBuyers" parameterType="int" resultMap="BaseResultMap">
     -- 从想要表中查询，查询某商品下的买家。
    SELECT * FROM web_user WHERE  EXISTS (
    SELECT userid FROM web_want WHERE goodid=#{goodid}
    AND userid=web_user.`userid`);
  </select>


  <!--根据登录名称，查询一个用户信息，-->
  <select id="findOneByUserCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM web_user WHERE loginname=#{userCode}
  </select>


  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userid, username, loginname, password, sex, college, graduatedate, Headimage, usertype, phone
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.huanletao.huanletao.entity.WebUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from web_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from web_user
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from web_user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.huanletao.huanletao.entity.WebUserExample" >
    delete from web_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huanletao.huanletao.entity.WebUser" >
    insert into web_user (userid, username, loginname, 
      password, sex, college, 
      graduatedate, Headimage, usertype ,phone
      )
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{loginname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{college,jdbcType=VARCHAR}, 
      #{graduatedate,jdbcType=DATE}, #{headimage,jdbcType=VARCHAR}, #{usertype,jdbcType=INTEGER},#{phone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.huanletao.huanletao.entity.WebUser" >
    insert into web_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="loginname != null" >
        loginname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="college != null" >
        college,
      </if>
      <if test="graduatedate != null" >
        graduatedate,
      </if>
      <if test="headimage != null" >
        Headimage,
      </if>
      <if test="usertype != null" >
        usertype,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="college != null" >
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="graduatedate != null" >
        #{graduatedate,jdbcType=DATE},
      </if>
      <if test="headimage != null" >
        #{headimage,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huanletao.huanletao.entity.WebUserExample" resultType="java.lang.Integer" >
    select count(*) from web_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update web_user
    <set >
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.loginname != null" >
        loginname = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.college != null" >
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.graduatedate != null" >
        graduatedate = #{record.graduatedate,jdbcType=DATE},
      </if>
      <if test="record.headimage != null" >
        Headimage = #{record.headimage,jdbcType=VARCHAR},
      </if>
      <if test="record.usertype != null" >
        usertype = #{record.usertype,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update web_user
    set userid = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      loginname = #{record.loginname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      college = #{record.college,jdbcType=VARCHAR},
      graduatedate = #{record.graduatedate,jdbcType=DATE},
      Headimage = #{record.headimage,jdbcType=VARCHAR},
      usertype = #{record.usertype,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huanletao.huanletao.entity.WebUser" >
    update web_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="college != null" >
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="graduatedate != null" >
        graduatedate = #{graduatedate,jdbcType=DATE},
      </if>
      <if test="headimage != null" >
        Headimage = #{headimage,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        usertype = #{usertype,jdbcType=INTEGER},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huanletao.huanletao.entity.WebUser" >
    update web_user
    set username = #{username,jdbcType=VARCHAR},
      loginname = #{loginname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      college = #{college,jdbcType=VARCHAR},
      graduatedate = #{graduatedate,jdbcType=DATE},
      Headimage = #{headimage,jdbcType=VARCHAR},
      usertype = #{usertype,jdbcType=INTEGER}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
</mapper>